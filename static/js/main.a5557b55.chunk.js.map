{"version":3,"sources":["components/Buscador.js","components/Imagen.js","components/Paginacion.js","components/Resultado.js","App.js","serviceWorker.js","index.js"],"names":["Buscador","busquedaRef","React","createRef","obtenerDatos","e","preventDefault","termino","current","value","props","datosBusqueda","onSubmit","this","className","ref","type","placeholder","Component","Imagen","imagen","largeImageURL","likes","previewURL","tags","views","src","alt","href","target","Paginacion","onClick","paginaAnterior","paginaSiguiente","Resultado","mostrarImagens","imagenes","length","Fragment","map","key","id","console","log","App","state","pagina","scroll","document","querySelector","scrollIntoView","setState","consultarApi","url","fetch","then","respuesta","json","resultado","hits","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5557b55.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\n\r\nclass Buscador extends Component{\r\n\r\n        busquedaRef=React.createRef();\r\n\r\n        obtenerDatos=(e)=>{\r\n            e.preventDefault()\r\n            const termino=this.busquedaRef.current.value;\r\n            this.props.datosBusqueda(termino);\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <form onSubmit={this.obtenerDatos}>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-md-8\">\r\n                            <input ref={this.busquedaRef} type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Busca tu imagen. Ejemplo: Futbol\"/>\r\n                        </div>\r\n                        <div className=\"form-group col-md-4\">\r\n                            <input type=\"submit\" className=\"btn btn-lg btn-danger btn-block\" value=\"Buscar\"/>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            );\r\n        }\r\n    \r\n}\r\n\r\nexport default Buscador;","import React from 'react';\r\n\r\nconst Imagen=(props)=>{\r\n    const {largeImageURL, likes, previewURL,tags,views}=props.imagen;\r\n    return(\r\n        <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\r\n            <div className=\"card \">\r\n                <img src={previewURL} alt={tags} className=\"card-img-top\"/>\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">{likes} Me gusta</p>\r\n                    <p className=\"card-text\">{views} Vistas</p>\r\n                    <a href={largeImageURL} target=\"_blank\" className=\"btn btn-primary btn-block\" >Ver Imagen</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Imagen;","import React from 'react';\r\n\r\nconst Paginacion=(props)=>{\r\n    return(\r\n        <div className=\"py-3\">\r\n            <button onClick={props.paginaAnterior} type=\"button\" className=\"btn btn-info mr-1\">Anterior</button>\r\n            <button onClick={props.paginaSiguiente} type=\"button\" className=\"btn btn-info mr-1\">Siguiente</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginacion;","import React, {Component} from 'react';\r\nimport Imagen from './Imagen';\r\nimport Paginacion from './Paginacion'\r\n\r\nclass Resultado extends Component {\r\n\r\n    componentDidUpdate(){\r\n        console.log(this.props.imagenes);\r\n    }\r\n    mostrarImagens=()=>{\r\n\r\n        const imagenes=this.props.imagenes;\r\n        if (imagenes.length === 0)return null;\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"col-12 p-5 row\">\r\n                    {imagenes.map(imagen=>(\r\n                        <Imagen\r\n                        key={imagen.id} \r\n                        imagen={imagen}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <Paginacion \r\n                 paginaAnterior={this.props.paginaAnterior}\r\n                 paginaSiguiente={this.props.paginaSiguiente}\r\n                 />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                {this.mostrarImagens()}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resultado;","import React, {Component} from 'react';\nimport Buscador from './components/Buscador';\nimport Resultado from './components/Resultado'\n\n\nclass App extends Component {\n\n\nstate={\n  termino:\"\",\n  imagenes:[],\n  pagina:''\n}\n\nscroll=()=>{\n  const elemento=document.querySelector('.jumbotron');\n  elemento.scrollIntoView('smooth','start');\n}\n\npaginaAnterior=()=>{\n  let pagina=this.state.pagina;\n  if(pagina===1) return null;\n  pagina--;\n  this.setState({\n    pagina:pagina\n  },()=>{\n    this.consultarApi();\n    this.scroll()})\n}\npaginaSiguiente=()=>{\n  let pagina=this.state.pagina;\n  pagina++;\n  this.setState({\n    pagina:pagina\n  },()=>{\n    this.consultarApi();\n    this.scroll()})\n}\n\nconsultarApi=()=>{\n  const termino=this.state.termino;\n  const pagina=this.state.pagina\n  const url=`https://pixabay.com/api/?key=13699504-c43b16177a4c11d057e920d74&q=${termino}&per_page=30&page=${pagina}`;\n  //console.log(url);\n  fetch(url)\n  .then(respuesta=>respuesta.json())\n  .then(resultado=>this.setState({imagenes:resultado.hits}))\n}\n\ndatosBusqueda=(termino)=>{\n  this.setState({\n    termino:termino,\n    pagina:1\n  },()=>{\n    this.consultarApi();\n  })\n}\n\n  render(){\n    return (\n      <div className=\"app container\">\n        <div className=\"jumbotron\">\n          <p className=\"lead text-center\">Buscador de im√°genes</p>\n          <Buscador \n          datosBusqueda={this.datosBusqueda}/>\n        </div>\n        <div className=\"row justify-content-center\">\n          <Resultado \n            imagenes={this.state.imagenes}\n            paginaAnterior={this.paginaAnterior}\n            paginaSiguiente={this.paginaSiguiente}\n            />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}